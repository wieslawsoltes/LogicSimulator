<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             x:Class="Logic.Views.DashboardView" 
             mc:Ignorable="d" 
             Background="{DynamicResource DashboardBackgroudColorKey}"
             d:DesignWidth="800" d:DesignHeight="600"
             SnapsToDevicePixels="True" UseLayoutRounding="True"
             TextOptions.TextFormattingMode="Display"
             TextOptions.TextHintingMode="Auto"
             TextOptions.TextRenderingMode="Auto">
    <UserControl.Resources>

        <SolidColorBrush x:Key="DashboardBackgroudColorKey" Color="#FF212121"/>

        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" 
                                   SnapsToDevicePixels="true" 
                                   Stroke="White" 
                                   StrokeThickness="1" 
                                   StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="DashboardButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonGrid" 
                                BorderBrush="White" 
                                BorderThickness="1" 
                                Background="{StaticResource DashboardBackgroudColorKey}"
                                SnapsToDevicePixels="True" >
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="ButtonGrid" Value="#9F3F3F3F"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="ButtonGrid" Value="#9F1F1F1F"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter Property="Background" TargetName="ButtonGrid" Value="#9F3F3F3F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
 
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="{StaticResource DashboardBackgroudColorKey}"/>
            <Setter Property="Foreground" Value="White"/>
            <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
            <!--<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
            <Setter Property="Padding" Value="9,6,9,6"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="ToolTip" Value="{Binding Path=Path}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{StaticResource DashboardBackgroudColorKey}"
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding DataContext.OpenCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" 
                                                           CommandParameter="{Binding Path=Path}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource DashboardBackgroudColorKey}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#9F3F3F3F"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="Black"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
 
    </UserControl.Resources>

    <Grid MaxWidth="800" MaxHeight="600">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.2*"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="0.2*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="50*"/>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition Width="40*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>

        <TextBlock Text="Logic" 
                   Foreground="White" FontSize="30" 
                   VerticalAlignment="Center" 
                   Grid.Column="1" Grid.ColumnSpan="3"
                   Grid.Row="1" Grid.RowSpan="1"/>
        
        <Button Content="_New Solution" FontSize="18" 
                Grid.Column="1" Grid.Row="3" 
                Grid.ColumnSpan="1" Grid.RowSpan="1" 
                Style="{StaticResource DashboardButtonStyle}" 
                Command="{Binding NewCommand}"
                Cursor="Hand"/>
        
        <Button Content="_Open Solution" FontSize="18" 
                Grid.Column="1" Grid.Row="5" 
                Grid.ColumnSpan="1" Grid.RowSpan="1" 
                Style="{StaticResource DashboardButtonStyle}" 
                Command="{Binding OpenCommand}"
                Cursor="Hand"/>

        <TextBlock Text="recent" 
                   Foreground="White" FontSize="20" 
                   VerticalAlignment="Center" 
                   HorizontalAlignment="Right"
                   Grid.Column="3" Grid.ColumnSpan="1"
                   Grid.Row="2" Grid.RowSpan="1"/>
        
        <ListBox Grid.Column="3" Grid.Row="3" 
                 Grid.ColumnSpan="1" Grid.RowSpan="3"
                 BorderBrush="White"
                 Background="{StaticResource DashboardBackgroudColorKey}"
                 SelectionMode="Single"
                 ItemsSource="{Binding RecentSolutions}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding Path=Name}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        
    </Grid>
 
</UserControl>
