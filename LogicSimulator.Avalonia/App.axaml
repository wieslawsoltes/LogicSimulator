<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="using:LogicSimulator"
             xmlns:converters="clr-namespace:LogicSimulator"
             xmlns:core="clr-namespace:LogicSimulator.Core.Core;assembly=LogicSimulator.Core"
             xmlns:gates="clr-namespace:LogicSimulator.Core.Gates;assembly=LogicSimulator.Core"
             xmlns:timers="clr-namespace:LogicSimulator.Core.Timers;assembly=LogicSimulator.Core"
             x:Class="LogicSimulator.App">

  <!-- TODO: -->
  <!--<Application.DataTemplates>
    <local:ViewLocator />
  </Application.DataTemplates>-->

  <Application.Styles>

    <FluentTheme Mode="Light" />

    <Style Selector="ListBoxItem">
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <!-- Diagram -->

    <Style Selector="Grid.StateDigitalLogicGridStyleKey">
      <Setter Property="Background" Value="Black" />
      <!--
          <Style.Triggers>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="False">
                  <Setter Property="Background" Value="Black"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="True">
                  <Setter Property="Background" Value="DeepPink"/>
              </DataTrigger>
          </Style.Triggers>
          -->
    </Style>

    <Style Selector="Grid.StateDigitalSignalGridStyleKey">
      <Setter Property="Background" Value="Black" />
      <!--
          <Style.Triggers>
              <DataTrigger Binding="{Binding Path=State}" Value="False">
                  <Setter Property="Background" Value="Black"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Path=State}" Value="True">
                  <Setter Property="Background" Value="DeepPink"/>
              </DataTrigger>
          </Style.Triggers>
          -->
    </Style>

    <Style Selector="Line.StateDigitalSignalLineStyleKey">
      <Setter Property="Stroke" Value="Red" />
      <Setter Property="StrokeThickness" Value="2.0" />
      <Setter Property="StrokeLineCap" Value="Round" />
    </Style>

    <Style Selector="Line.IsFalse">
      <Setter Property="Stroke" Value="Yellow" />
    </Style>

    <Style Selector="Line.IsTrue">
      <Setter Property="Stroke" Value="DeepPink" />
    </Style>

    <Style Selector="Line.DigitalLogicLineStyleKey">
      <Setter Property="Stroke" Value="Yellow" />
      <Setter Property="StrokeThickness" Value="2.0" />
      <Setter Property="StrokeLineCap" Value="Round" />
      <!--
          <Style.Triggers>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="False">
                  <Setter Property="Stroke" Value="Yellow"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="True">
                  <Setter Property="Stroke" Value="DeepPink"/>
              </DataTrigger>
          </Style.Triggers>
          -->
    </Style>

    <Style Selector="Rectangle.DigitalLogicRectangleStyleKey">
      <Setter Property="Stroke" Value="Yellow" />
      <Setter Property="StrokeThickness" Value="2.0" />
      <!--
          <Style.Triggers>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="False">
                  <Setter Property="Stroke" Value="Yellow"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="True">
                  <Setter Property="Stroke" Value="DeepPink"/>
              </DataTrigger>
          </Style.Triggers>
          -->
    </Style>

    <Style Selector="Ellipse.DigitalLogicEllipseStyleKey">
      <Setter Property="Stroke" Value="Yellow" />
      <Setter Property="StrokeThickness" Value="2.0" />
      <!--
          <Style.Triggers>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="False">
                  <Setter Property="Stroke" Value="Yellow"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="True">
                  <Setter Property="Stroke" Value="DeepPink"/>
              </DataTrigger>
          </Style.Triggers>
          -->
    </Style>

    <Style Selector="Rectangle.DigitalSignalRectangleStyleKey">
      <Setter Property="Stroke" Value="Red" />
      <Setter Property="StrokeThickness" Value="2.0" />
    </Style>

    <Style Selector="Rectangle.IsFalse">
      <Setter Property="Stroke" Value="Yellow" />
    </Style>

    <Style Selector="Rectangle.IsTrue">
      <Setter Property="Stroke" Value="DeepPink" />
    </Style>

    <Style Selector="TextBlock.DigitalLogicTextBlockStyleKey">
      <Setter Property="FontFamily" Value="Arial" />
      <Setter Property="FontSize" Value="12" />
      <Setter Property="FontWeight" Value="DemiBold" />
      <Setter Property="Foreground" Value="Yellow" />
      <!--
          <Style.Triggers>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="False">
                  <Setter Property="Foreground" Value="Yellow"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="True">
                  <Setter Property="Foreground" Value="DeepPink"/>
              </DataTrigger>
          </Style.Triggers>
          -->
    </Style>

    <Style Selector="TextBlock.DigitalLogicSmallTextBlockStyleKey">
      <Setter Property="FontFamily" Value="Arial" />
      <Setter Property="FontSize" Value="10" />
      <Setter Property="FontWeight" Value="DemiBold" />
      <Setter Property="Foreground" Value="Yellow" />
      <!--
          <Style.Triggers>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="False">
                  <Setter Property="Foreground" Value="Yellow"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Path=Outputs[0].State}" Value="True">
                  <Setter Property="Foreground" Value="DeepPink"/>
              </DataTrigger>
          </Style.Triggers>
          -->
    </Style>

    <Style Selector="TextBlock.DigitalSignalTextBlockStyleKey">
      <Setter Property="FontFamily" Value="Arial" />
      <Setter Property="FontSize" Value="12" />
      <Setter Property="FontWeight" Value="Normal" />
      <Setter Property="Foreground" Value="Red" />
    </Style>

    <Style Selector="TextBlock.IsFalse">
      <Setter Property="Foreground" Value="Yellow" />
    </Style>

    <Style Selector="TextBlock.IsTrue">
      <Setter Property="Foreground" Value="DeepPink" />
    </Style>

    <Style Selector="CheckBox.DigitalLogicCheckBoxStyleKey">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <Grid Background="Transparent" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Model -->

    <Style Selector="CheckBox.StateCheckBoxStyleKey">
      <Setter Property="Foreground" Value="Red" />
      <!-- TODO: -->
      <!--<Style.Triggers>
        <DataTrigger Binding="{Binding Path=State}" Value="False">
          <Setter Property="Foreground" Value="Black" />
        </DataTrigger>
        <DataTrigger Binding="{Binding Path=State}" Value="True">
          <Setter Property="Foreground" Value="DeepPink" />
        </DataTrigger>
      </Style.Triggers>-->
    </Style>

    <Style Selector="CheckBox.DigitalWireStateCheckBoxStyleKey">
      <Setter Property="Foreground" Value="Red" />
      <!-- TODO: -->
      <!--<Style.Triggers>
        <DataTrigger Binding="{Binding Path=Signal.State}" Value="False">
          <Setter Property="Foreground" Value="Black" />
        </DataTrigger>
        <DataTrigger Binding="{Binding Path=Signal.State}" Value="True">
          <Setter Property="Foreground" Value="DeepPink" />
        </DataTrigger>
      </Style.Triggers>-->
    </Style>

  </Application.Styles>

  <Application.Resources>

    <!-- Diagram -->

    <DataTemplate x:Key="DigitalSignalDataTemplateKey" x:DataType="core:DigitalSignal">
      <CheckBox IsChecked="{Binding Path=State}" Width="120" Height="30">
        <CheckBox.Template>
          <ControlTemplate>
            <Grid Width="120" Height="30" Classes="StateDigitalSignalGridStyleKey">
              <Rectangle Classes="DigitalSignalRectangleStyleKey" Width="120" Height="30"
                         Classes.IsTrue="{Binding State, FallbackValue={x:Null}, Converter={x:Static converters:Converters.BoolIsTrue}}"
                         Classes.IsFalse="{Binding State, FallbackValue={x:Null}, Converter={x:Static converters:Converters.BoolIsFalse}}" />
              <TextBlock Text="{Binding Path=Name}" Classes="DigitalSignalTextBlockStyleKey"
                         VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"
                         Classes.IsTrue="{Binding State, FallbackValue={x:Null}, Converter={x:Static converters:Converters.BoolIsTrue}}"
                         Classes.IsFalse="{Binding State, FallbackValue={x:Null}, Converter={x:Static converters:Converters.BoolIsFalse}}"/>
            </Grid>
          </ControlTemplate>
        </CheckBox.Template>
      </CheckBox>
    </DataTemplate>

    <DataTemplate x:Key="DigitalWireDataTemplateKey" x:DataType="core:DigitalWire">
      <Line Classes="StateDigitalSignalLineStyleKey"
            StartPoint="{Binding StartPin, Converter={x:Static converters:Converters.DigitalPinToPoint}}"
            EndPoint="{Binding EndPin, Converter={x:Static converters:Converters.DigitalPinToPoint}}"
            Classes.IsTrue="{Binding Signal.State, FallbackValue={x:Null}, Converter={x:Static converters:Converters.BoolIsTrue}}"
            Classes.IsFalse="{Binding Signal.State, FallbackValue={x:Null}, Converter={x:Static converters:Converters.BoolIsFalse}}" />
    </DataTemplate>

    <DataTemplate x:Key="AndGateDataTemplateKey" x:DataType="gates:AndGate">
      <Thumb ClipToBounds="False">
        <Thumb.Template>
          <ControlTemplate>
            <Grid Width="30" Height="30" Classes="StateDigitalLogicGridStyleKey">
              <Rectangle Classes="DigitalLogicRectangleStyleKey" Width="30" Height="30" />
              <TextBlock Text="&amp;" Classes="DigitalLogicTextBlockStyleKey"
                         VerticalAlignment="Center" HorizontalAlignment="Center" />
              <!--<CheckBox IsChecked="{Binding Path=Outputs[0].State}" Classes="DigitalLogicCheckBoxStyleKey" Width="30" Height="30"/>-->
            </Grid>
          </ControlTemplate>
        </Thumb.Template>
      </Thumb>
    </DataTemplate>

    <DataTemplate x:Key="OrGateDataTemplateKey" x:DataType="gates:OrGate">
      <Thumb ClipToBounds="False">
        <Thumb.Template>
          <ControlTemplate>
            <Grid Width="30" Height="30" Classes="StateDigitalLogicGridStyleKey">
              <Rectangle Classes="DigitalLogicRectangleStyleKey" Width="30" Height="30" />
              <TextBlock Text="≥1" Classes="DigitalLogicTextBlockStyleKey"
                         VerticalAlignment="Center" HorizontalAlignment="Center" />
              <!--<CheckBox IsChecked="{Binding Path=Outputs[0].State}" Classes="DigitalLogicCheckBoxStyleKey" Width="30" Height="30"/>-->
            </Grid>
          </ControlTemplate>
        </Thumb.Template>
      </Thumb>
    </DataTemplate>

    <DataTemplate x:Key="NotGateDataTemplateKey" x:DataType="gates:NotGate">
      <Thumb ClipToBounds="False">
        <Thumb.Template>
          <ControlTemplate>
            <Grid Width="30" Height="30" Classes="StateDigitalLogicGridStyleKey">
              <Rectangle Classes="DigitalLogicRectangleStyleKey" Width="30" Height="30" />
              <Ellipse Classes="DigitalLogicEllipseStyleKey" HorizontalAlignment="Center"
                       Width="10" Height="10" Margin="0,0,-38,0" />
              <TextBlock Text="1" Classes="DigitalLogicTextBlockStyleKey"
                         VerticalAlignment="Center" HorizontalAlignment="Center" />
              <!--<CheckBox IsChecked="{Binding Path=Outputs[0].State}" Classes="DigitalLogicCheckBoxStyleKey" Width="30" Height="30"/>-->
            </Grid>
          </ControlTemplate>
        </Thumb.Template>
      </Thumb>
    </DataTemplate>

    <DataTemplate x:Key="BufferGateDataTemplateKey" x:DataType="gates:BufferGate">
      <Thumb ClipToBounds="False">
        <Thumb.Template>
          <ControlTemplate>
            <Grid Width="30" Height="30" Classes="StateDigitalLogicGridStyleKey">
              <Rectangle Classes="DigitalLogicRectangleStyleKey" Width="30" Height="30" />
              <TextBlock Text="1" Classes="DigitalLogicTextBlockStyleKey"
                         VerticalAlignment="Center" HorizontalAlignment="Center" />
              <!--<CheckBox IsChecked="{Binding Path=Outputs[0].State}" Classes="DigitalLogicCheckBoxStyleKey" Width="30" Height="30"/>-->
            </Grid>
          </ControlTemplate>
        </Thumb.Template>
      </Thumb>
    </DataTemplate>

    <DataTemplate x:Key="NandGateDataTemplateKey" x:DataType="gates:NandGate">
      <Thumb ClipToBounds="False">
        <Thumb.Template>
          <ControlTemplate>
            <Grid Width="30" Height="30" Classes="StateDigitalLogicGridStyleKey">
              <Rectangle Classes="DigitalLogicRectangleStyleKey" Width="30" Height="30" />
              <Ellipse Classes="DigitalLogicEllipseStyleKey" HorizontalAlignment="Center"
                       Width="10" Height="10" Margin="0,0,-38,0" />
              <TextBlock Text="&amp;" Classes="DigitalLogicTextBlockStyleKey"
                         VerticalAlignment="Center" HorizontalAlignment="Center" />
              <!--<CheckBox IsChecked="{Binding Path=Outputs[0].State}" Classes="DigitalLogicCheckBoxStyleKey" Width="30" Height="30"/>-->
            </Grid>
          </ControlTemplate>
        </Thumb.Template>
      </Thumb>
    </DataTemplate>

    <DataTemplate x:Key="NorGateDataTemplateKey" x:DataType="gates:NorGate">
      <Thumb ClipToBounds="False">
        <Thumb.Template>
          <ControlTemplate>
            <Grid Width="30" Height="30" Classes="StateDigitalLogicGridStyleKey">
              <Rectangle Classes="DigitalLogicRectangleStyleKey" Width="30" Height="30" />
              <Ellipse Classes="DigitalLogicEllipseStyleKey" HorizontalAlignment="Center"
                       Width="10" Height="10" Margin="0,0,-38,0" />
              <TextBlock Text="≥1" Classes="DigitalLogicTextBlockStyleKey"
                         VerticalAlignment="Center" HorizontalAlignment="Center" />
              <!--<CheckBox IsChecked="{Binding Path=Outputs[0].State}" Classes="DigitalLogicCheckBoxStyleKey" Width="30" Height="30"/>-->
            </Grid>
          </ControlTemplate>
        </Thumb.Template>
      </Thumb>
    </DataTemplate>

    <DataTemplate x:Key="XorGateDataTemplateKey" x:DataType="gates:XorGate">
      <Thumb ClipToBounds="False">
        <Thumb.Template>
          <ControlTemplate>
            <Grid Width="30" Height="30" Classes="StateDigitalLogicGridStyleKey">
              <Rectangle Classes="DigitalLogicRectangleStyleKey" Width="30" Height="30" />
              <TextBlock Text="=1" Classes="DigitalLogicTextBlockStyleKey"
                         VerticalAlignment="Center" HorizontalAlignment="Center" />
              <!--<CheckBox IsChecked="{Binding Path=Outputs[0].State}" Classes="DigitalLogicCheckBoxStyleKey" Width="30" Height="30"/>-->
            </Grid>
          </ControlTemplate>
        </Thumb.Template>
      </Thumb>
    </DataTemplate>

    <DataTemplate x:Key="XnorGateDataTemplateKey" x:DataType="gates:XnorGate">
      <Thumb ClipToBounds="False">
        <Thumb.Template>
          <ControlTemplate>
            <Grid Width="30" Height="30" Classes="StateDigitalLogicGridStyleKey">
              <Rectangle Classes="DigitalLogicRectangleStyleKey" Width="30" Height="30" />
              <Ellipse Classes="DigitalLogicEllipseStyleKey" HorizontalAlignment="Center"
                       Width="10" Height="10" Margin="0,0,-38,0" />
              <TextBlock Text="=1" Classes="DigitalLogicTextBlockStyleKey"
                         VerticalAlignment="Center" HorizontalAlignment="Center" />
              <!--<CheckBox IsChecked="{Binding Path=Outputs[0].State}" Classes="DigitalLogicCheckBoxStyleKey" Width="30" Height="30"/>-->
            </Grid>
          </ControlTemplate>
        </Thumb.Template>
      </Thumb>
    </DataTemplate>

    <DataTemplate x:Key="TimerOnDelayDataTemplateKey" x:DataType="timers:TimerOnDelay">
      <Thumb ClipToBounds="False">
        <Thumb.Template>
          <ControlTemplate>
            <Grid Width="30" Height="30" Classes="StateDigitalLogicGridStyleKey">
              <Rectangle Classes="DigitalLogicRectangleStyleKey" Width="30" Height="30" />
              <Line StartPoint="7,18" EndPoint="7,22" Classes="DigitalLogicLineStyleKey" />
              <Line StartPoint="23,18" EndPoint="23,22" Classes="DigitalLogicLineStyleKey" />
              <Line StartPoint="7,20" EndPoint="23,20" Classes="DigitalLogicLineStyleKey" />
              <TextBlock Text="{Binding Path=Delay, StringFormat=T\={0}s}" Margin="0,-14,0,0"
                         HorizontalAlignment="Center"
                         Classes="DigitalLogicSmallTextBlockStyleKey" />
              <TextBlock Text="T" Margin="4,4,0,0" HorizontalAlignment="Left"
                         Classes="DigitalLogicSmallTextBlockStyleKey" />
              <TextBlock Text="0" Margin="0,4,4,0" HorizontalAlignment="Right"
                         Classes="DigitalLogicSmallTextBlockStyleKey" />
              <!--<CheckBox IsChecked="{Binding Path=Outputs[0].State}" Classes="DigitalLogicCheckBoxStyleKey" Width="30" Height="30"/>-->
            </Grid>
          </ControlTemplate>
        </Thumb.Template>
      </Thumb>
    </DataTemplate>

    <DataTemplate x:Key="TimerPulseDataTemplateKey" x:DataType="timers:TimerPulse">
      <Thumb ClipToBounds="False">
        <Thumb.Template>
          <ControlTemplate>
            <Grid Width="30" Height="30" Classes="StateDigitalLogicGridStyleKey">
              <Rectangle Classes="DigitalLogicRectangleStyleKey" Width="30" Height="30" />
              <Line StartPoint="7,19" EndPoint="11,19" Classes="DigitalLogicLineStyleKey" />
              <Line StartPoint="19,19" EndPoint="23,19" Classes="DigitalLogicLineStyleKey" />
              <Line StartPoint="11,11" EndPoint="19,11" Classes="DigitalLogicLineStyleKey" />
              <Line StartPoint="11,11" EndPoint="11,19" Classes="DigitalLogicLineStyleKey" />
              <Line StartPoint="19,11" EndPoint="19,19" Classes="DigitalLogicLineStyleKey" />
              <TextBlock Text="{Binding Path=Delay, StringFormat={}{0}s}" Margin="0,-14,0,0" HorizontalAlignment="Center"
                         Classes="DigitalLogicSmallTextBlockStyleKey" />
              <!--<CheckBox IsChecked="{Binding Path=Outputs[0].State}" Classes="DigitalLogicCheckBoxStyleKey" Width="30" Height="30"/>-->
            </Grid>
          </ControlTemplate>
        </Thumb.Template>
      </Thumb>
    </DataTemplate>

    <!-- Model -->

    <DataTemplate x:Key="DigitalSignalValueDataTemplateKey" x:DataType="core:DigitalSignal">
      <Grid Margin="2">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Border Grid.Row="0" Margin="3" BorderThickness="1" BorderBrush="Black">
          <Grid Margin="1">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding Path=Name}" Margin="2" Grid.Row="0" Background="LightGray" />
            <CheckBox IsChecked="{Binding Path=State}" Content="State" Grid.Row="2" Margin="2"
                      Classes="StateCheckBoxStyleKey" />
          </Grid>
        </Border>
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DigitalLogicValueDataTemplateKey" x:DataType="core:DigitalLogic">
      <Grid Margin="2">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="50*" />
          <ColumnDefinition Width="50*" />
        </Grid.ColumnDefinitions>
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="AndGateValueDataTemplateKey" x:DataType="gates:AndGate">
      <Grid Margin="2">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="50*" />
          <ColumnDefinition Width="50*" />
        </Grid.ColumnDefinitions>
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="OrGateValueDataTemplateKey" x:DataType="gates:OrGate">
      <Grid Margin="2">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="50*" />
          <ColumnDefinition Width="50*" />
        </Grid.ColumnDefinitions>
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="NotGateValueDataTemplateKey" x:DataType="gates:NotGate">
      <Grid Margin="2" RowDefinitions="Auto,Auto,*">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="50*" />
          <ColumnDefinition Width="50*" />
        </Grid.ColumnDefinitions>
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BufferGateValueDataTemplateKey" x:DataType="gates:BufferGate">
      <Grid Margin="2" RowDefinitions="Auto,Auto,*">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="50*" />
          <ColumnDefinition Width="50*" />
        </Grid.ColumnDefinitions>
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="NandGateValueDataTemplateKey" x:DataType="gates:NandGate">
      <Grid Margin="2" RowDefinitions="Auto,Auto,*" ColumnDefinitions="50*,50*">
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="NorGateValueDataTemplateKey" x:DataType="gates:NotGate">
      <Grid Margin="2" RowDefinitions="Auto,Auto,*" ColumnDefinitions="50*,50*">
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="XorGateValueDataTemplateKey" x:DataType="gates:XorGate">
      <Grid Margin="2" RowDefinitions="Auto,Auto,*" ColumnDefinitions="50*,50*">
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="XnorGateValueDataTemplateKey" x:DataType="gates:XnorGate">
      <Grid Margin="2" RowDefinitions="Auto,Auto,*" ColumnDefinitions="50*,50*">
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TimerOnDelayValueDataTemplateKey" x:DataType="timers:TimerOnDelay">
      <Grid Margin="2" RowDefinitions="Auto,Auto,*" ColumnDefinitions="50*,50*">
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <TextBlock Text="{Binding Path=Delay}" Margin="3" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" />
        <Slider Value="{Binding Path=Delay}" Minimum="0" Maximum="60" TickFrequency="1" IsSnapToTickEnabled="True"
                Margin="3" Grid.Column="1" Grid.Row="1" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TimerPulseValueDataTemplateKey" x:DataType="timers:TimerPulse">
      <Grid Margin="2" RowDefinitions="Auto,Auto,*" ColumnDefinitions="50*,50*">
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                   Background="LightBlue" />
        <TextBlock Text="{Binding Path=Delay}" Margin="3" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" />
        <Slider Value="{Binding Path=Delay}" Minimum="0" Maximum="60" TickFrequency="1" IsSnapToTickEnabled="True"
                Margin="3" Grid.Column="1" Grid.Row="1" />
        <ListBox Items="{Binding Path=Inputs}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
        <ListBox Items="{Binding Path=Outputs}" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"
                 ItemTemplate="{StaticResource ResourceKey=DigitalSignalValueDataTemplateKey}" BorderThickness="0" />
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DigitalWireValueDataTemplateKey" x:DataType="core:DigitalWire">
      <Grid Margin="2" RowDefinitions="Auto,Auto,*">
        <TextBlock Text="{Binding Path=Name}" Margin="3" Grid.Row="0" Background="LightBlue" />
        <Border Grid.Row="1" Margin="3" BorderThickness="1" BorderBrush="Black">
          <Grid Margin="1" RowDefinitions="Auto,Auto,*">
            <TextBlock Text="{Binding Path=Signal.Name, FallbackValue={x:Null}}" Margin="2" Grid.Row="0" Background="LightGray" />
            <CheckBox IsChecked="{Binding Path=Signal.State, FallbackValue={x:Null}}" Content="State" Grid.Row="2" Margin="2"
                      Classes="DigitalWireStateCheckBoxStyleKey" />
          </Grid>
        </Border>
      </Grid>
    </DataTemplate>

  </Application.Resources>

</Application>
